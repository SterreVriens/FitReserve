name: Build and deploy NX applications to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: npm install, build, test
        run: |
          npm install --legacy-peer-deps
          npm run build --if-present
          npm run test --if-present
      - name: Zip artifacts for deployment
        run: |
          echo ${GITHUB_WORKSPACE}
          cd ${GITHUB_WORKSPACE}\dist\apps\data-api\ && zip ${GITHUB_WORKSPACE}\data-api-release.zip .\* -r
          cd ${GITHUB_WORKSPACE}\dist\apps\fit-reserve\ && zip ${GITHUB_WORKSPACE}\fit-reserve-release.zip .\* -r

      - name: Upload frontend artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: fit-reserve
          path: fit-reserve-release.zip
      - name: Upload data-api artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: data-api
          path: data-api-release.zip

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: frontend

      - name: Unzip artifact for deployment
        run: unzip frontend-release.zip

      - name: Deploy to static azure web app
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.ANGULAR_PUBLISHTOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          app_location: "/" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "" # Build app content directory - optional
          config_file_location: "/assets"

  deploy-data-api:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: data-api

      - name: Unzip artifact for deployment
        run: unzip data-api-release.zip

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'Fit-reserve'
          slot-name: 'Production'
          publish-profile: ${{ secrets.NEXTJS_PUBLISHPROFILE }}
          package: .
